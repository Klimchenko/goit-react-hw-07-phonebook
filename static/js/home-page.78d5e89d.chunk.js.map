{"version":3,"file":"static/js/home-page.78d5e89d.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,KAAH,+GAOJC,EAAQD,EAAAA,GAAAA,MAAH,kKASLE,EAAQF,EAAAA,GAAAA,MAAH,+LAWLG,GAAcH,EAAAA,EAAAA,IAAOE,EAAPF,CAAH,gDAIXI,EAASJ,EAAAA,GAAAA,OAAH,gd,SCuEnB,MA/FA,WACE,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACPC,GAAaC,EAAAA,EAAAA,MAAnBC,KAEFC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAEhBE,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MAEd,OAAQlB,GACN,IAAK,OACHC,EAAQiB,GACR,MACF,IAAK,QACHf,EAASe,KAQTC,GAAeC,EAAAA,EAAAA,cACnB,SAAAJ,GACEA,EAAEK,iBACF,IAAMC,EAAiBtB,EAAKuB,cACtBC,EAAmBf,EAASgB,MAAK,SAAAC,GAAO,OAC5CA,EAAQ1B,KAAKuB,cAAcI,SAASL,MAGlCE,IACFvB,EAAQ,IACRE,EAAS,IACTyB,EAAAA,GAAAA,KAAA,UAAc5B,EAAd,8BAGGwB,IACHvB,EAAQ,IACRE,EAAS,IACTI,EAAW,CAAEP,KAAAA,EAAME,MAAAA,IACnB0B,EAAAA,GAAAA,QAAA,UAAiB5B,EAAjB,qBAAkCE,EAAlC,wBACAE,EAAS,YAAa,CAAEyB,SAAS,OAGrC,CAAC7B,EAAME,EAAOK,EAAYH,EAAUK,IAGtC,OACE,+BACE,UAAChB,EAAD,CAAMqC,SAAUX,EAAhB,WACE,SAACxB,EAAD,CAAOoC,QAASnB,EAAhB,mBAEA,SAAChB,EAAD,CACEoC,KAAK,OACLhC,KAAK,OACLkB,MAAOlB,EACP+B,QAASnB,EACTqB,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAACzC,EAAD,CAAOoC,QAASjB,EAAhB,qBAEA,SAACjB,EAAD,CACEmC,KAAK,MACLhC,KAAK,QACLkB,MAAOhB,EACP6B,QAASjB,EACTmB,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGV,UAACtC,EAAD,CAAQkC,KAAK,SAASK,SAAU7B,EAAhC,WACE,SAAC,MAAD,CACE8B,MAAO,CACLC,MAAO,GACPC,OAAQ,MAET,IANL,uBChFR,MARA,WACE,OACE,+BACE,SAAC,EAAD,Q,sLCLOC,EAAY,SAAAC,GAAK,OAAIA,EAAMjC,U","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/HomePage.js","redux/contacts-selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border: 0;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: flex-start;\n  margin-bottom: 10px;\n  color: #fff;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 460px;\n  height: 40px;\n  outline: none;\n  border: 0;\n  border-bottom: 1px solid #000;\n  margin-bottom: 20px;\n  padding: 10px 30px;\n  font-size: 20px;\n`;\n\nexport const InputBottom = styled(Input)`\n  margin-bottom: 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 170px;\n  height: 40px;\n  padding: 5px 10px;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 700;\n  border: 0;\n  color: #011b27;\n  background-color: #fff;\n\n  &:hover {\n    color: #fff;\n    background-color: #264d5f;\n    box-shadow: 1px 2px 1px #011b27, 3px 5px 4px #264d5f;\n    transition: all 400ms cubic-bezier(0.4, 0, 0.3, 1);\n  }\n`;\n","import { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { BsTelephonePlus } from 'react-icons/bs';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useGetContactsByNameQuery, useAddContactMutation } from '../../redux';\nimport { Form, Label, Input, InputBottom, Button } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const navigate = useNavigate();\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsByNameQuery();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const normalizedName = name.toLowerCase();\n      const isNameInContacts = contacts.some(contact =>\n        contact.name.toLowerCase().includes(normalizedName),\n      );\n\n      if (isNameInContacts) {\n        setName('');\n        setPhone('');\n        toast.warn(`${name} is already in contacts.`);\n      }\n\n      if (!isNameInContacts) {\n        setName('');\n        setPhone('');\n        addContact({ name, phone });\n        toast.success(`${name} with tel:${phone} added to contacts.`);\n        navigate('/contacts', { replace: true });\n      }\n    },\n    [name, phone, addContact, navigate, contacts],\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameInputId}>Name</Label>\n\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          htmlFor={nameInputId}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Label htmlFor={numberInputId}>Number</Label>\n\n        <InputBottom\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          htmlFor={numberInputId}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <Button type=\"submit\" disabled={isLoading}>\n          <BsTelephonePlus\n            style={{\n              width: 30,\n              height: 30,\n            }}\n          />{' '}\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import ContactForm from '../components/ContactForm';\n\nfunction HomePage() {\n  return (\n    <>\n      <ContactForm />\n    </>\n  );\n}\n\nexport default HomePage;\n","export const getFilter = state => state.contacts;\n"],"names":["Form","styled","Label","Input","InputBottom","Button","useState","name","setName","phone","setPhone","navigate","useNavigate","useAddContactMutation","addContact","isLoading","contacts","useGetContactsByNameQuery","data","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","value","handleSubmit","useCallback","preventDefault","normalizedName","toLowerCase","isNameInContacts","some","contact","includes","toast","replace","onSubmit","htmlFor","type","onChange","pattern","title","required","disabled","style","width","height","getFilter","state"],"sourceRoot":""}